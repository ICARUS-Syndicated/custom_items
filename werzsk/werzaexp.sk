options:
    prefix: &8[&6WerzAEXP&8]

command /axp [<text>] [<integer=1>] [<text>] [<text>]:
    usage: /axp [action] [value]
    description: Convert your experience levels to experience bottles
    executable by: players
    trigger:
        set {_action} to arg-1
        set {_arg_2} to arg-2
        set {_arg_3} to arg-3
        set {_arg_4} to arg-4
        set {_eula} to {advexp.%player's uuid%.eula}
        

        if {_action} is "bottle":
                
            set {_bottles} to {_arg_2}
            set {_notifi} to {_arg_3}
            if {_notifi} is not set:
                set {_notifi} to "true"

            if player's experience < {_bottles} * 5:
                send "&c‚ùå ‰Ω†Ê≤°ÊúâË∂≥Â§üÁöÑÁªèÈ™åÂéªËΩ¨ÂåñÁªèÈ™åÁì∂" to player
                stop
                
            reduce player's experience by {_bottles} * 5

            set {_item} to experience bottle named "&a%player%&rÁöÑÁªèÈ™åÁì∂" with lore "&rÁªèÈ™åÁì∂Ê¶®‰∫éÔºö&b%player%(&l%player's uuid%)" with nbt from "{CustomItem:Cum,nchantments:[{id:'minecraft:unbreaking',lvl:1}],HideFlags:63}"
            if {_notifi} is "true":
                set line 2 of lore of {_item} to "Ê∫êËá™‰∫éÁ≤æÈ≠ÑÔºö&b&l&n%player's experience%X&r | &b&l&n%player's level%L" 
            give {_bottles} of {_item} to player

            send "&a‚úì ËΩ¨Êç¢‰∫Ü &6%{_bottles}%&a ÁªèÈ™åÁì∂!" to player

            stop

        if {_action} is "milking-bottle":
            set {_player} to {_arg_3} parsed as player
            set {_bottles} to {_arg_2}
            set {_notifi} to {_arg_4}

            if {_player} is not set:
                send "&c‚ùå Ê≤°ÊúâËØ•Áé©ÂÆ∂Âì¶!" to sender
                stop

            if {_notifi} is not set:
                set {_notifi} to "true"

            if {_player}'s experience < {_bottles} * 5:
                send "&c‚ùå ‰Ω†Ê≤°ÊúâË∂≥Â§üÁöÑÁªèÈ™åÂéªËΩ¨ÂåñÁªèÈ™åÁì∂" to sender
                stop
                
            reduce {_player}'s experience by {_bottles} * 5

            set {_item} to experience bottle named "&a%{_player}%&rÁöÑÁªèÈ™åÁì∂" with lore "&rÁªèÈ™åÁì∂Ê¶®‰∫éÔºö&b%{_player}%(&l%{_player}'s uuid%)"
            if {_notifi} is "true":
                set line 2 of lore of {_item} to "Ê∫êËá™‰∫éÁ≤æÈ≠ÑÔºö&b&l&n%{_player}'s experience%X&r | &b&l&n%{_player}'s level%L" 
            give {_bottles} of {_item} to player

            send "&a‚úì ËΩ¨Êç¢‰∫Ü %{_player}% ÁöÑ &6%{_bottles}%&a ÁªèÈ™åÁì∂!" to sender
            send "&c‚ö†&a ‰Ω†Ë¢´&6 %sender%&a Ê¶®‰∫ÜÊï¥Êï¥ &6%{_bottles}%&a ÁΩêÁªèÈ™åÁì∂!" to {_player}

            stop
    
        if {_action} = "eula":
            checkeula(player)
            stop

        if {_action} = "wash":
            if player's tool is not experience bottle:
                send "{@prefix}&cÊÇ®Êâã‰∏äÊ≤°ÊúâÊãøÁùÄÁªèÈ™åÁì∂ÔºÅ" to player
                stop
            set {_amount} to amount of player's tool
            # if checkeula(player) is false:
            #     stop
            set player's tool to air
            give {_amount} of experience bottle to player
            send "{@prefix}&aÂ∑≤Â∞ÜÊÇ®Êâã‰∏≠ÁöÑ &6%{_amount}% &a‰∏™ÁªèÈ™åÁì∂Ê∏ÖÊ¥ó‰∏∫ÊôÆÈÄöÁªèÈ™åÁì∂ÔºÅ" to player
            stop

        if {_action} = "eulacheck":
            send "{@prefix} &bÂΩìÂâçEULAÁä∂ÊÄÅ: %{advexp.%player's uuid%.eula}%" to player
        else:
            send "{@prefix} &cÊó†ÊïàÁöÑÊìç‰Ωú, ËØ∑‰ΩøÁî® /axp [bottle|eula|eulacheck]" to player

function checkeula(p: player) :: boolean:
    set {_eula} to {advexp.eula.%{_p}'s uuid%}

    if {_eula} is set:
        if {_eula} is true:
            return true
        else:
            return false
    else:
        send "{@prefix}&a üìö Ë∞¢Ë∞¢‰ΩøÁî®Ôºå‰ΩÜÊòØ‰ΩøÁî®‰πãÂâçÈúÄË¶ÅÊÇ®ÂêåÊÑèÈ°ªÁü• üñä" to {_p}
        send "&b    ‚ë† ÁªèÈ™åËΩ¨Êç¢ÂèØËÉΩ‰ºöÊúâÊçüÂ§±ÔºåÊâÄ‰ª•ÊØèÊ¨°ÈÉΩ‰ºöÊâ£Èô§5ÁªèÈ™å‰∏∫Êú¨" to {_p}
        send "&b    ‚ë° ‰æùÊçÆÊ≠§ÂÖ¨ÂºèËΩ¨Êç¢ÁªèÈ™åÔºöÊÄªÁªèÈ™åÂÄº=‚àë^(N-1) (i=0) * (7+7*i)=7N+7*(N-1)N/2" to {_p}
        send "&b    ‚ë¢ ÂèØËÉΩÊØèÊ¨°ËΩ¨Êç¢ÈÉΩ‰ºöÁº∫Â§±‰∏Ä‰∫õÁªèÈ™åÊàñËÄÖÂ§öÂá∫‰∏Ä‰∫õÁªèÈ™å" to {_p}
        send "&b    ‚ë£ ÁªèÈ™åÁì∂ÊòØÊúâÊçüËÄóÁöÑÔºå‰∏çËÉΩ‰øùËØÅÊØèÊ¨°‰∏¢ÁªèÈ™åÁì∂ÈÉΩ‰ºöÊÅ¢Â§çÂà∞Êú¨Êù•ÁöÑÁªèÈ™å" to {_p}
        send "&b    ‚ë§ ‰ΩøÁî®ÁªèÈ™åÁì∂Á≥ªÁªüÈúÄË¶Å‰∫§Âá∫‰Ω†ÁöÑÁÅµÈ≠Ç‰ª•Ê≠§Êç¢ÂèñÈì≠Âç∞" to {_p}
        send "&b    " to {_p}
        send "&a ËøôËæπÈúÄË¶ÅÊÇ®Á≠æÁΩ≤ÂêåÊÑèÂ£∞ÊòéÔºö&r/axp eula 1 I-agree-with-everything-i-do:Everything-i-do-has-nothing-to-do-with-the-developer-and-the-server:And-i-dont-bother-with-any-admins-after-something-happens" to {_p}
        send formatted "<tooltip:&7ÁÇπÂáªÊ≠§Â§ÑÂêåÊÑèEULA>&a &r&b&n[ÁÇπÂáªÂêåÊÑè]<run command:/axp eula 1 I-agree-with-everything-i-do:Everything-i-do-has-nothing-to-do-with-the-developer-and-the-server:And-i-dont-bother-with-any-admins-after-something-happens>" to {_p}
        return false

on tab complete of "/axp":
    set tab completions for position 1 to "bottle", "eula", "wash", "milking-bottle"
    if (tab arg-1) = "milking-bottle":
        set tab completions for position 2 to all players