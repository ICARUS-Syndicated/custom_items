options:
    prefix: &8[&6WerzABP&8]
    prefixadmin: &8[&6WerzABP&r:&cADMIN&8]
    dataFolder: plugins/WerzBackpack/playersdata # JSON 数据文件夹

command /bp [<integer=1>]:
    description: "Better Best Backpack by WerewolfwolfyXD"
    usage: /bp [backpack number]
    executable by: players
    trigger:
        # # 获取背包ID 从 arg 1
        # set {_backpackNumber} to arg-1
        
        # # 无效的背包Number
        # if {_backpackNumber} < 1:
        #     send "{@prefix} &c背包ID必须大于1！"
        #     stop
            
        # # 如果玩家有无已注册背包
        # if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
        #     # 创建新的背包
        #     set {backpack.%player's uuid%.%{_backpackNumber}%} to chest inventory with 64 rows named "&6背包 &l#%{_backpackNumber}%"
        #     send "{@prefix} &a已经成功创建背包 (#%{_backpackNumber}%)!"
        
        # # 打开背包
        # open {backpack.%player's uuid%.%{_backpackNumber}%} to player
        # # send "{@prefix} &7背包 #%{_backpackNumber}% 已打开"

        # Get backpack ID from arg 1
        set {_backpackNumber} to arg-1
        
        # Invalid backpack number check
        if {_backpackNumber} < 1:
            send "{@prefix} &c背包ID必须大于1！"
            stop
            
        # 如果玩家没有将id绑定到注册背包，创建一个
        if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
            # 新建背包
            set {backpack.%player's uuid%.%{_backpackNumber}%} to chest inventory with 6 rows named "&6背包 &l#%{_backpackNumber}%"
            send "{@prefix} &a已经成功创建背包 (#%{_backpackNumber}%)!"
        
        # 检查id是否绑定背包容器，并且是否需要同步数据
        if {backpack.%player's uuid%.%{_backpackNumber}%.x} is set:
            # 获取容器location
            set {_world} to {backpack.%player's uuid%.%{_backpackNumber}%.world}
            set {_x} to {backpack.%player's uuid%.%{_backpackNumber}%.x}
            set {_y} to {backpack.%player's uuid%.%{_backpackNumber}%.y}
            set {_z} to {backpack.%player's uuid%.%{_backpackNumber}%.z}
            
            # 获取坐标obj
            set {_loc} to location({_x}, {_y}, {_z}, {_world})
            
            # 检查目标容器是否还存在
            set {_block} to block at {_loc}
            
            if {_block} is chest or barrel or trapped chest or shulker box:
                # Optional: Auto-sync from container if desired
                # This section would copy items from the physical container
                # to the backpack inventory before opening
                
                # Uncomment the following lines if you want auto-sync:
                # set {_containerInv} to inventory of block at {_loc}
                # set {_backpackInv} to {backpack.%player's uuid%.%{_backpackNumber}%}
                # clear {_backpackInv}
                # loop all items in {_containerInv}:
                #     add loop-item to {_backpackInv}
                # send "{@prefix} &a已自动从绑定容器同步内容到背包!"
            else:
                # 容器没了，提示玩家考虑是不是要解绑
                send "{@prefix} &e注意: 此背包绑定的容器已不存在，请考虑重新绑定或解绑。"
        
        # Open backpack
        open {backpack.%player's uuid%.%{_backpackNumber}%} to player

# 被包管理器
command /bpm [<text>] [<integer>] [<integer>]:
    description: Manage your backpacks
    usage: /bpm [create|delete|list] [backpack number]
    executable by: players
    trigger:
        set {_action} to arg-1
        set {_backpackNumber} to arg-2
        set {_size} to arg-3
        
        # 列出背包
        if {_action} is "list":
            send "{@prefix} &6你的背包:"
            set {_count} to 0
            loop {backpack.%player's uuid%::*}:
                add 1 to {_count}
                send "{@prefix} &7- 背包 #%loop-index% &8(&7ID: %loop-index%&8)"
            
            if {_count} is 0:
                send "{@prefix} &c你没有可用背包!"
            stop
        
        # 检查ID是否存在背包
        if {_backpackNumber} is not set:
            if {_action} is "create" or "delete":
                send "{@prefix} &c你这个背包ID没有绑定任何背包!"
                stop
        
        
        # 创建指定背包
        if {_action} is "create" or "c":
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%} is set:
                send "{@prefix} &c你已经有这个ID的背包了！"
                stop

            if {_size} is not set:    
                set {_size} to 64
            
            set {backpack.%player's uuid%.%{_backpackNumber}%} to chest inventory with {_size} rows named "&6背包 #%{_backpackNumber}%"
            send "{@prefix} &a已创建新背包 (#%{_backpackNumber}%):大小：%{_size}%!"
            stop
            
        # 删除指定背包
        if {_action} is "delete" or "del" or "d":
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
             
            if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
                send "{@prefix} &c你这个背包ID没有绑定任何背包!"
                stop
            
            if {backpack.%player's uuid%.%{_backpackNumber}%.x} is set:
                send "{@prefix} &a有绑定背包，删除会解绑"
                delete {backpack.%player's uuid%.%{_backpackNumber}%.world}
                delete {backpack.%player's uuid%.%{_backpackNumber}%.x}
                delete {backpack.%player's uuid%.%{_backpackNumber}%.y}
                delete {backpack.%player's uuid%.%{_backpackNumber}%.z}
                delete {backpack.%player's uuid%.%{_backpackNumber}%.type}
                delete {backpack.%player's uuid%.%{_backpackNumber}%}
            if {auto_collect.%player's uuid%} is set:
                delete {auto_collect.%player's uuid%}
            delete {backpack.%player's uuid%.%{_backpackNumber}%}
            send "{@prefix} &a已删除背包 #%{_backpackNumber}%!"
            stop


        # 存入箱子
        if {_action} is "transfer" or "put":
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
                send "{@prefix} &c你这个背包ID没有绑定任何背包!"
                stop

            set {_target} to target block of player

            # 检查 target 是不是容器
            if {_target} is chest or barrel or trapped chest or shulker box:
                # 获取背包库存
                set {_backpackInv} to {backpack.%player's uuid%.%{_backpackNumber}%}
                set {_containerInv} to inventory of {_target}

                # 转移物品计数器
                set {_itemCount} to 0

                # 开始转移
                loop all items in {_backpackInv}:
                    if {_containerInv} can hold loop-item:
                        # 计数器 +1
                        add 1 to {_itemCount}
                        # 添加到箱子；并且从背包中清除
                        add loop-item to {_containerInv}
                        remove loop-item from {_backpackInv}
                    else:
                        send "{@prefix} &c容器大小不足，停止传输！&a已成功将 %{_itemCount}% 格物品从背包 #%{_backpackNumber}% 转移到容器中!"
                        stop
                if {_itemCount} is 0:
                    send "{@prefix} &e背包是空的，没有物品转移哦"
                    stop
                else:
                    send "{@prefix} &a已成功将 %{_itemCount}% 格物品从背包 #%{_backpackNumber}% 转移到容器中!"
                    stop
            else:
                send "{@prefix} &c你需要对着一个容器 (箱子、桶等) 使用此命令!"
            stop

        # 从容器存储物品到背包
        if {_action} is "storage" or "get":
            if {_backpackNumber} is not set:
                send "{@prefix} &c请指定背包ID!"
                stop
                
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
                # 创建新的背包
                set {backpack.%player's uuid%.%{_backpackNumber}%} to chest inventory with 6 rows named "&6背包 &l#%{_backpackNumber}%"
                send "{@prefix} &a已经成功创建背包 (#%{_backpackNumber}%)!"
            
            # 获取玩家正在看的方块
            set {_target} to target block of player
            
            # 检查方块是否为容器
            if {_target} is chest or barrel or trapped chest or shulker box:
                # 获取背包和容器的库存
                set {_backpackInv} to {backpack.%player's uuid%.%{_backpackNumber}%}
                set {_containerInv} to inventory of {_target}
                
                # 计数转移的物品
                set {_itemCount} to 0
                
                # 从容器转移物品到背包
                loop all items in {_containerInv}:
                    if {_backpackInv} can hold loop-item:
                        add 1 to {_itemCount}
                        add loop-item to {_backpackInv}
                        remove loop-item from {_containerInv}
                    else:
                        send "{@prefix} &c背包大小不足，停止传输！&a已成功将 %{_itemCount}% 格物品从容器转移到背包 #%{_backpackNumber}% 中!"
                        stop

                if {_itemCount} is 0:
                    send "{@prefix} &e容器是空的，没有物品可以转移。"
                else:
                    send "{@prefix} &a已成功将 %{_itemCount}% 个物品从容器转移到背包 #%{_backpackNumber}%!"
            else:
                send "{@prefix} &c你需要对着一个容器 (箱子、桶等) 使用此命令!"
            stop

        if {_action} is "unpacker":
            if {_backpackNumber} is not set:
                send "{@prefix} &c请指定背包ID!"
                stop
                
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop

            # 检查背包是否存在
            if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
                send "{@prefix} &c你这个背包ID没有绑定任何背包!"
                stop
                
            # 获取背包物品
            set {_backpackInv} to {backpack.%player's uuid%.%{_backpackNumber}%}
            
            # 计数器
            set {_itemCount} to 0
            
            # 开始丢出
            loop all items in {_backpackInv}:
                add 1 to {_itemCount}
                drop loop-item at player's location
                remove loop-item from {_backpackInv}
            
            # 背包删除
            delete {backpack.%player's uuid%.%{_backpackNumber}%}

            # 总结
            if {_itemCount} is 0:
                send "{@prefix} &e背包是空的，没有物品可以丢出来。"
            else:
                send "{@prefix} &a已成功将背包 #%{_backpackNumber}% 中的 %{_itemCount}% 格物品丢出来!并且删除背包"

        if {_action} is "drop":
            if {_backpackNumber} is not set:
                send "{@prefix} &c请指定背包ID!"
                stop
                
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop

            # 检查背包是否存在
            if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
                send "{@prefix} &c你这个背包ID没有绑定任何背包!"
                stop
                
            # 获取背包物品
            set {_backpackInv} to {backpack.%player's uuid%.%{_backpackNumber}%}
            
            # 计数器
            set {_itemCount} to 0
            
            # 开始丢出
            loop all items in {_backpackInv}:
                add 1 to {_itemCount}
                drop loop-item at player's location
                remove loop-item from {_backpackInv}

            # 总结
            if {_itemCount} is 0:
                send "{@prefix} &e背包是空的，没有物品可以丢出来。"
            else:
                send "{@prefix} &a已成功将背包 #%{_backpackNumber}% 中的 %{_itemCount}% 格物品丢出来!"
            stop
        
        
        if {_action} is "save":
            send "正在保存背包" to sender
            set {_pUUID} to player's uuid
            set {_sUUID} to sender's uuid
            set {_currentFile} to "{@dataFolder}/%{_pUUID}%.json"
            send "pUUID:" + {_pUUID} + " | " + "sUUID:" + {_sUUID}
            
            send {_currentFile}
            new json file {_currentFile}
            
            # set {_backpackData} to {backpack.%player's uuid%::*}
            send "{@prefix} &a您的背包数据: %{backpack.%player's uuid%.1}%"
            
            send "{@prefix} 正在保存你的背包数据"
            save {backpack.%player's uuid%::*}
            save {auto_collect.%player's uuid%::*}


                # set {_backpackInv} to {backpack.%player's uuid%.1}
                # loop all items in {_backpackInv}:
                #     send loop-item
                #     send "%loop-item% x%item amount of loop-item%"
                #     write json from text "%loop-item% x%item amount of loop-item%" to json file "plugins/test.json"


            stop

        if {_action} is "checkfall":
            
            set {_backpack} to arg-2
            
            if {_backpack} is not set:
                send "{@prefix} &c请指定背包ID!"
                stop
                
            if {_backpack} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpack}%} is not set:
                send "{@prefix} &c你这个背包ID没有绑定任何背包!"
                stop
            
            set {_bind_backpack} to {backpack.%player's uuid%.%{_backpack}%}
            
            set {_itemsCollected} to 0
            
            loop all dropped items in radius 2.5 around player:
                add loop-entity's item to {_bind_backpack}
                delete loop-entity
                add 1 to {_itemsCollected}
            
            if {_itemsCollected} is 0:
                send "{@prefix} &e附近没有掉落物可以拾取。"
            else:
                send "{@prefix} &a已成功将 %{_itemsCollected}% 个掉落物收入背包 #%{_backpack}%!"
            
            stop

        # 自动拾取
        if {_action} is "auto":

            if {auto_collect.%player's uuid%.notification} is not set:
                set {auto_collect.%player's uuid%.notification} to true

            if {_backpackNumber} is not set:
                if {auto_collect.%player's uuid%} is set:
                    delete {auto_collect.%player's uuid%.notification}
                    delete {auto_collect.%player's uuid%}
                    send "{@prefix} &c已关闭自动拾取模式。"
                else:
                    send "{@prefix} &c请指定要用于自动拾取的背包ID!"
                stop
                
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
                send "{@prefix} &c你这个背包ID没有绑定任何背包!"
                stop
            
            set {auto_collect.%player's uuid%} to {_backpackNumber}

            send "{@prefix} &a已开启自动拾取模式。所有靠近你的掉落物将被自动收入背包 #%{_backpackNumber}%!"
            send {_size}
            stop

        if {_action} is "autonotifi":
            if {auto_collect.%player's uuid%.notification} is not set:
                set {auto_collect.%player's uuid%.notification} to true
                send "{@prefix} &a没有查到消息提示模式，正在创建状态机"
                stop
            if {auto_collect.%player's uuid%.notification} is true:
                send "{@prefix} &r正在切换消息提示模式，当前状态：&c关闭"
                set {auto_collect.%player's uuid%.notification} to false
                stop
            else:
                send "{@prefix} &r正在切换消息提示模式，当前状态：&a开启"
                set {auto_collect.%player's uuid%.notification} to true
                stop
            

        # 绑定背包与容器
        if {_action} is "bind":
            if {_backpackNumber} is not set:
                send "{@prefix} &c请指定要绑定的背包ID!"
                stop
                
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
                send "{@prefix} &c你这个背包ID没有绑定任何背包! &a正在创建背包！"
                set {backpack.%player's uuid%.%{_backpackNumber}%} to chest inventory with 6 rows named "&6背包 &l#%{_backpackNumber}%"
            
            
            set {_target} to target block of player
            
            if {_target} is chest or barrel or trapped chest or shulker box:
                set {_containerInv} to inventory of {_target}
                set {backpack.%player's uuid%.%{_backpackNumber}%.world} to player's world
                set {backpack.%player's uuid%.%{_backpackNumber}%.x} to x-coordinate of {_target}
                set {backpack.%player's uuid%.%{_backpackNumber}%.y} to y-coordinate of {_target}
                set {backpack.%player's uuid%.%{_backpackNumber}%.z} to z-coordinate of {_target}
                set {backpack.%player's uuid%.%{_backpackNumber}%.type} to "%{_target}%"
                set {backpack.%player's uuid%.%{_backpackNumber}%} to {_containerInv}
                
                send "{@prefix} &a已成功将此 %{_target}% 绑定到背包 #%{_backpackNumber}%!"
            else:
                send "{@prefix} &c你需要对着一个容器 (箱子、桶等) 使用此命令!"
            stop
            
        # 解绑容器和背包
        if {_action} is "unbind":
            if {_backpackNumber} is not set:
                send "{@prefix} &c请指定要解绑的背包ID!"
                stop
                
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%.x} is not set:
                send "{@prefix} &c此背包没有绑定任何容器!"
                stop
                
            set {_containerType} to {backpack.%player's uuid%.%{_backpackNumber}%.type}
                
            delete {backpack.%player's uuid%.%{_backpackNumber}%.world}
            delete {backpack.%player's uuid%.%{_backpackNumber}%.x}
            delete {backpack.%player's uuid%.%{_backpackNumber}%.y}
            delete {backpack.%player's uuid%.%{_backpackNumber}%.z}
            delete {backpack.%player's uuid%.%{_backpackNumber}%.type}
            delete {backpack.%player's uuid%.%{_backpackNumber}%}
            
            send "{@prefix} &a已成功解除背包 #%{_backpackNumber}% 与 %{_containerType}% 的绑定!"
            stop
            
        # 绑定的容器信息
        if {_action} is "bindinfo":
            if {_backpackNumber} is not set:
                send "{@prefix} &c请指定要查看的背包ID!"
                stop
                
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%.x} is not set:
                send "{@prefix} &c此背包没有绑定任何容器!"
                stop
                
            set {_world} to {backpack.%player's uuid%.%{_backpackNumber}%.world}
            set {_x} to {backpack.%player's uuid%.%{_backpackNumber}%.x}
            set {_y} to {backpack.%player's uuid%.%{_backpackNumber}%.y}
            set {_z} to {backpack.%player's uuid%.%{_backpackNumber}%.z}
            set {_type} to {backpack.%player's uuid%.%{_backpackNumber}%.type}
            
            send "{@prefix} &6背包 #%{_backpackNumber}% 绑定信息:"
            send "{@prefix} &7容器类型: &f%{_type}%"
            send "{@prefix} &7位置: &f世界: %{_world}%, X: %{_x}%, Y: %{_y}%, Z: %{_z}%"
            stop

        
        # 从服务器数据中同步背包与容器的绑定
        if {_action} is "bindsync":
            # 无效number
            if {_backpackNumber} is not set:
                send "{@prefix} &c请指定要同步的背包ID!"
                stop
                
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
                send "{@prefix} &c你这个背包ID没有绑定任何背包!"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%.x} is not set:
                send "{@prefix} &c此背包没有绑定任何容器! 请先使用 /bpm bind %{_backpackNumber}% 绑定一个容器。"
                stop
                
            set {_world} to {backpack.%player's uuid%.%{_backpackNumber}%.world}
            set {_x} to {backpack.%player's uuid%.%{_backpackNumber}%.x}
            set {_y} to {backpack.%player's uuid%.%{_backpackNumber}%.y}
            set {_z} to {backpack.%player's uuid%.%{_backpackNumber}%.z}
            
            set {_loc} to location({_x}, {_y}, {_z}, {_world})
            
            set {_block} to block at {_loc}
            
            if {_block} is chest or barrel or trapped chest or shulker box:
                set {_containerInv} to inventory of block at {_loc}
                set {_backpackInv} to {backpack.%player's uuid%.%{_backpackNumber}%}
                
                clear {_backpackInv}
                
                loop all items in {_containerInv}:
                    add loop-item to {_backpackInv}
                
                send "{@prefix} &a已成功将绑定容器的内容同步到背包 #%{_backpackNumber}%!"
            else:
                send "{@prefix} &c绑定的容器不存在或已被移除! 请重新绑定容器。"
                
                delete {backpack.%player's uuid%.%{_backpackNumber}%.world}
                delete {backpack.%player's uuid%.%{_backpackNumber}%.x}
                delete {backpack.%player's uuid%.%{_backpackNumber}%.y}
                delete {backpack.%player's uuid%.%{_backpackNumber}%.z}
                delete {backpack.%player's uuid%.%{_backpackNumber}%.type}
                delete {backpack.%player's uuid%.%{_backpackNumber}%}
            stop

        if {_action} is "bindsave":
            if {_backpackNumber} is not set:
                send "{@prefix} &c请指定要同步的背包ID!"
                stop
                
            if {_backpackNumber} < 1:
                send "{@prefix} &c背包ID必须大于1！"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%} is not set:
                send "{@prefix} &c你这个背包ID没有绑定任何背包!"
                stop
                
            if {backpack.%player's uuid%.%{_backpackNumber}%.x} is not set:
                send "{@prefix} &c此背包没有绑定任何容器! 请先使用 /bpm bind %{_backpackNumber}% 绑定一个容器。"
                stop

            set {_world} to {backpack.%player's uuid%.%{_backpackNumber}%.world}
            set {_x} to {backpack.%player's uuid%.%{_backpackNumber}%.x}
            set {_y} to {backpack.%player's uuid%.%{_backpackNumber}%.y}
            set {_z} to {backpack.%player's uuid%.%{_backpackNumber}%.z}
            
            set {_loc} to location({_x}, {_y}, {_z}, {_world})
            
            set {_block} to block at {_loc}

            save {_world}
            save {_loc}
            save {_block}

        if {_action} is "autorate":
            set {auto_collect.rate} to {_size}
            send "自动拾取调整速率：%{auto_collect.rate}%"

        if {_action} is "target":
            set {_target} to target block of player
            if {_target} is chest or barrel or trapped chest or shulker box:
                send "{@prefix}&b target: %{_target}% &a&l可以绑定"
            else:
                send "{@prefix}&b target: %{_target}% &c&l不可以绑定"
            stop

        # 无效指令
        if {_action} is not set:
            send "{@prefix} &c用法: /bpm [create|delete|list] [backpack number]"
            stop

        

        else:
            send "{@prefix} &c无效命令...检查一下呗" to sender
            stop

        

function collectNearbyItems(p: player, backpackNumber: number) :: boolean:
    if {_backpackNumber} < 1:
        send "{@prefix} &c背包ID必须大于1！" to {_p}
        return false
        
    if {backpack.%{_p}'s uuid%.%{_backpackNumber}%} is not set:
        send "{@prefix} &c你这个背包ID没有绑定任何背包!" to {_p}
        delete {auto_collect.%{_p}'s uuid%}
        return false

    set {_bind_backpack} to {backpack.%{_p}'s uuid%.%{_backpackNumber}%}
    
    set {_itemsCollected} to 0
    
    loop all dropped items in radius 2.5 around {_p}:
        if {_bind_backpack} can hold loop-entity's item:
            add loop-entity's item to {_bind_backpack}
            delete loop-entity 
            add 1 to {_itemsCollected}
        else:
            send "{@prefix} &a你的背包满了！自动拾取关闭咯~" to {_p}
            delete {auto_collect.%{_p}'s uuid%} 
            return false
    
    if {_itemsCollected} is 0:
        return false
    else:
        if {auto_collect.%{_p}'s uuid%.notification} is true:
            send "{@prefix} &a已成功将 %{_itemsCollected}% 个掉落物自动收入背包 #%{_backpackNumber}%!" to {_p}
        return true


every tick:
    loop all players:
        # Check if player has auto-collect enabled
        if {auto_collect.%loop-player's uuid%} is set:
            set {_backpackNumber} to {auto_collect.%loop-player's uuid%}
            set {_result} to collectNearbyItems(loop-player, {_backpackNumber})


on item spawn:
    wait 1 tick
    loop all players in radius 2.5 around event-entity:
        if {auto_collect.%loop-player's uuid%} is set:
            set {_backpackNumber} to {auto_collect.%loop-player's uuid%}
            set {_result} to collectNearbyItems(loop-player, {_backpackNumber})

            
# 服务器关闭时：保存背包数据
on unload:
    save {backpack::*}
    save {auto_collect::*}

# 玩家离开游戏时：保存背包数据
on quit:
    send "{@prefix} 正在保存你的背包数据"
    save {backpack.%player's uuid%::*}
    save {auto_collect.%player's uuid%::*}

on script load:
    wait 5 seconds # 先给服务器时间加载数据
    send "&8[&6Backpack&8] &7正在加载背包与容器绑定数据..." to console
    
    # loop所有玩家的背包data
    loop {backpack.::*}:
        set {_uuid} to loop-index-1
        loop {backpack.%{_uuid}%::*}:
            set {_backpackNumber} to loop-index-2
            
            # 检查如果背包有绑定的数据
            if {backpack.%{_uuid}%.%{_backpackNumber}%.x} is set:
                set {_world} to {backpack.%{_uuid}%.%{_backpackNumber}%.world}
                set {_x} to {backpack.%{_uuid}%.%{_backpackNumber}%.x}
                set {_y} to {backpack.%{_uuid}%.%{_backpackNumber}%.y}
                set {_z} to {backpack.%{_uuid}%.%{_backpackNumber}%.z}
                
                send "&8[&6Backpack&8] &7已加载玩家 %{_uuid}% 的背包 #%{_backpackNumber}% 的容器绑定: 世界 %{_world}%, X: %{_x}%, Y: %{_y}%, Z: %{_z}%" to console
    
    send "&8[&6Backpack&8] &7背包容器绑定数据加载完成!" to console


command /bpc [<integer=1>]:
    description: "Better Best Backpack by WerewolfwolfyXD"
    usage: /bp [backpack number]
    executable by: players
    trigger:
        # 获取背包ID 从 arg 1
        set {_backpackNumber} to arg-1
        
        # 无效的背包Number
        if {_backpackNumber} < 1:
            send "{@prefix} &c背包ID必须大于1！"
            stop
            
        # 如果玩家有无已注册背包
        if {backpack.%player's uuid%.%{_backpackNumber}%.inv} is not set:
            # 创建新的背包
            send "{@prefix} &a没有绑定的背包 (#%{_backpackNumber}%)!"
        
        # 打开背包
        open {backpack.%player's uuid%.%{_backpackNumber}%.inv} to player
        # send "{@prefix} &7背包 #%{_backpackNumber}% 已打开"

command /bpsee [<text>] [<integer=1>]:
    permission: werzabp.admin
    permission message: &c抱歉，你没有权限使用该命令！
    trigger:
        set {_playername} to arg-1
        set {_backpackNumber} to arg-2

        set {_player} to {_playername} parsed as player

        set {_backpackInv} to {backpack.%{_player}'s uuid%.%{_backpackNumber}%}

        if {_playername} is not set:
            send "{@prefixadmin} &c用法错误哦！&r&l/bpsee <playername> <backpacknumber>"
            stop
        
        if {_backpackInv} is set:
            open {_backpackInv} to sender
            if {backpack.%{_player}'s uuid%.%{_backpackNumber}%.x} is set:
                send "{@prefixadmin} &a正在视奸 &b%{_player}%(%{_player}'s uuid%) &a的&6背包容器&a (#%{_backpackNumber}%)"
            else:
                send "{@prefixadmin} &a正在视奸 &b%{_player}%(%{_player}'s uuid%) &a的&6背包&a (#%{_backpackNumber}%)"
            stop
        else:
            send "{@prefixadmin} &b%{_player}%(%{_player}'s uuid%) &a没有背包 (#%{_backpackNumber}%) 欸！"
        stop

command /bpcshare [<text>] [<integer=1>] [<integer=1>]:
    trigger:
        # 玩家名 自己的背包id(共享的) 对方映射背包id
        set {_playername} to arg-1
        set {_backpackcNumber} to arg-2
        set {_backpackoNumber} to arg-3
        set {_opposite_player} to {_playername} parsed as player

        if {_playername} is not set:
            send "{@prefix} 用法错误哦！ /bpcshare 用户名 你要共享的容器背包 对方映射背包"
            stop

        set {_share_inv} to {backpack.%sender's uuid%.%{_backpackcNumber}%}
        set {_opposite_inv} to {backpack.%{_opposite_player}'s uuid%.%{_backpackoNumber}%}

        if {backpack.%sender's uuid%.%{_backpackcNumber}%.x} is set:
            if {_opposite_inv} is not set:
                send "{@prefix} &a正在共享背包容器：%{backpack.%sender's uuid%.%{_backpackcNumber}%.type}% (背包#%{_backpackcNumber}%) 给 %{_playername}% (背包#%{_backpackoNumber}%)"
                send "{@prefix}&c[共享容器] &6%sender% &b正在和你共享容器 &6%{backpack.%sender's uuid%.%{_backpackcNumber}%.type}%&b &0|&b 来自他的 &6(背包#%{_backpackcNumber}%) &b: 映射到您的 &6(背包#%{_backpackoNumber}%)" to {_opposite_player}
                
                set {_containerInv} to inventory of {backpack.%sender's uuid%.%{_backpackcNumber}%}
                set {backpack.%{_opposite_player}'s uuid%.%{_backpackoNumber}%.world} to {backpack.%sender's uuid%.%{_backpackcNumber}%.world}
                set {backpack.%{_opposite_player}'s uuid%.%{_backpackoNumber}%.x} to {backpack.%sender's uuid%.%{_backpackcNumber}%.x}
                set {backpack.%{_opposite_player}'s uuid%.%{_backpackoNumber}%.y} to {backpack.%sender's uuid%.%{_backpackcNumber}%.y} 
                set {backpack.%{_opposite_player}'s uuid%.%{_backpackoNumber}%.z} to {backpack.%sender's uuid%.%{_backpackcNumber}%.z}
                set {backpack.%{_opposite_player}'s uuid%.%{_backpackoNumber}%.type} to {backpack.%sender's uuid%.%{_backpackcNumber}%.type}
                set {backpack.%{_opposite_player}'s uuid%.%{_backpackoNumber}%} to {backpack.%sender's uuid%.%{_backpackcNumber}%}
                stop    
            else:
                send "{@prefix} &a对方的容器id有冲突！有绑定物品了啦！"
                stop
        else:
            send "{@prefix} &c你这个id背包不是容器！"
            stop

command /bpcsharetome [<text>] [<integer=1>] [<integer=1>]:
    permission: werzabp.admin
    permission message: &c抱歉，你没有权限使用该命令！
    trigger:
        # 玩家名 自己的背包id(共享的) 对方映射背包id
        set {_playername} to arg-1
        set {_opposite_inv_num} to arg-2
        set {_my_inv_num} to arg-3
        set {_opposite_player} to {_playername} parsed as player

        if {_playername} is not set:
            send "{@prefixadmin} 用法错误哦！ /bpcshare 用户名 对方的容器背包 自己的映射背包"
            stop

        # 对方的inv
        set {_share_inv} to {backpack.%{_opposite_player}'s uuid%.%{_opposite_inv_num}%}
        # 自己的inv
        set {_my_inv} to {backpack.%sender's uuid%.%{_my_inv_num}%}

        if {backpack.%{_opposite_player}'s uuid%.%{_opposite_inv_num}%.x} is set:
            if {_opposite_inv} is not set:
                send "{@prefixadmin} &a正在强制让对方共享背包容器：%{backpack.%sender's uuid%.%{_my_inv_num}%.type}% %{_playername}% (背包#%{_opposite_inv_num}%) 给 (背包#%{_my_inv_num}%) 您"
                send "{@prefixadmin}&c[共享容器] &6%sender% &b正在强制使你和他共享容器 &6%{backpack.%sender's uuid%.%{_my_inv_num}%.type}%&b &0|&b 来自他的 &6(背包#%{_my_inv_num}%) &b: 映射到您的 &6(背包#%{_opposite_inv_num}%)" to {_opposite_player}
                
                set {backpack.%sender's uuid%.%{_my_inv_num}%.world} to {backpack.%{_opposite_player}'s uuid%.%{_opposite_inv_num}%.world}
                set {backpack.%sender's uuid%.%{_my_inv_num}%.x} to {backpack.%{_opposite_player}'s uuid%.%{_opposite_inv_num}%.x}
                set {backpack.%sender's uuid%.%{_my_inv_num}%.y} to {backpack.%{_opposite_player}'s uuid%.%{_opposite_inv_num}%.y}
                set {backpack.%sender's uuid%.%{_my_inv_num}%.z} to {backpack.%{_opposite_player}'s uuid%.%{_opposite_inv_num}%.z}
                set {backpack.%sender's uuid%.%{_my_inv_num}%.type} to {backpack.%{_opposite_player}'s uuid%.%{_opposite_inv_num}%.type}
                set {backpack.%sender's uuid%.%{_my_inv_num}%} to {backpack.%{_opposite_player}'s uuid%.%{_opposite_inv_num}%}
                stop    
            else:
                send "{@prefixadmin} &a我方的容器id有冲突！有绑定物品了啦！"
                stop
        else:
            send "{@prefixadmin} &c他这个id背包不是容器！"
            stop

on tab complete of "/bpsee":
    set tab completions for position 1 to all players

# 命令补全
on tab complete of "/bpm":
    # 第一阶段命令补全
    set tab completions for position 1 to "create", "list", "delete", "transfer", "storage", "get", "unpacker", "drop", "save", "auto", "autonotifi", "bind", "unbind", "bindinfo", "autorate", "target", "bindsync", "bindsave", "c", "d", "del"
    # # 子命令补全
    # if (tab arg-1) = "":
    #     set tab 