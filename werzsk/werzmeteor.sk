options:
    meteor_cooldown: 2 # 特殊攻击的冷却时间（秒）
    arrows_per_burst: 10 # 特殊攻击时发射的箭矢数量
    tracking_radius: 5 # 箭矢开始追踪的半径
    flight_time: 0.3 # 箭矢飞行多久后开始追踪（秒）
    arrow_speed: 2.0 # 箭矢基础速度
    damage_radius: 3 # 箭矢击中时的伤害半径
    damage_multiplier: 1.5 # 伤害倍率

# 箭矢发射事件
on shoot:
    if all:
        shooter is a player
        nbt of shooter's tool has tag "CustomItem"
        string tag "CustomItem" of nbt of shooter's tool is "WerzMeteor"
    then:
        set {_shooter} to shooter
        set {_arrow} to projectile

        # send "%{_shooter}% | %{_arrow}%" to {_shooter}
        
        # 让箭矢先正常飞行一段时间
        wait {@flight_time} seconds

        # send "Tracking!" to {_shooter}
        
        # 确保箭矢仍然存在
        if {_arrow} is not alive:
            # send "%{_arrow}% is dead!" to {_shooter}
            stop
            
        # 添加特效显示箭矢已启动追踪模式
        # display flame particle at location of {_arrow}
        draw 2 of flame at {_arrow}


        play sound "entity.blaze.shoot" with volume 0.3 at {_arrow}
        
        # 开始追踪循环
        set {_tracking} to true
        set {_attempts} to 0
        
        while {_arrow} is alive:
            add 1 to {_attempts}
            if {_attempts} > 30: # 防止无限循环
                stop
                
            # 寻找附近的目标（优先怪物和其他玩家）
            set {_target} to {_shooter} # 默认无目标
            
            # 寻找最近的有效目标
            loop all entities in radius {@tracking_radius} around {_arrow}:
                # 跳过无效目标
                if loop-entity is {_shooter}:
                    continue
                if loop-entity is an arrow:
                    continue
                if loop-entity is a dropped item:
                    continue
                if loop-entity is an armor stand:
                    continue
                if loop-entity is an item frame:
                    continue
                if loop-entity is a painting:
                    continue
                if loop-entity is a boat:
                    continue
                if loop-entity is an experience orb:
                    continue
                    
                # 设置目标（有敌对生物时优先追踪）
                if loop-entity is a monster:
                    set {_target} to loop-entity

                    # send "Mosnter" to {_shooter}
                    exit loop # 找到怪物就直接选择
                if loop-entity is a player:
                    if loop-entity is not {_shooter}:
                        set {_target} to loop-entity

                        # send "player %{_target}%" to {_shooter}
                if loop-entity is living entity:
                    if loop-entity is not {_shooter}:
                        if {_target} is {_shooter}: # 仅当尚未找到任何目标时
                            set {_target} to loop-entity
                            # send "Living %{_target}%" to {_shooter}

                        
            # 如果找到有效目标，进行追踪
            if {_target} is not {_shooter}:
                # send "Available" to {_shooter}
                # 获取目标位置（稍微瞄准头部提高命中率）
                set {_target_loc} to location of {_target}
                set y-coordinate of {_target_loc} to (y-coordinate of {_target_loc}) + 1.5
                
                # 计算方向向量
                set {_direction} to vector from location of {_arrow} to {_target_loc}
                
                # 调整箭矢速度和方向
                set velocity of {_arrow} to {_direction} normalized * {@arrow_speed}
                
                # 追加一点提前量以应对移动目标
                set {_target_vel} to velocity of {_target}
                if vector length of {_target_vel} > 0.1:
                    set velocity of {_arrow} to (velocity of {_arrow}) + ({_target_vel} * 0.2)
                
                # 箭矢追踪效果
                # display flame particle at location of {_arrow}
                draw 2 of flame at {_arrow}
            
            # 短暂等待后继续更新
            wait 2 ticks
            
        # 箭矢命中或消失，检查是否需要产生爆炸效果
        if {_arrow} is not alive:
            set {_explosion_loc} to {_arrow}'s location
            
            # 特效和声音
            play sound "entity.generic.explode" with volume 0.5 at {_explosion_loc}
            play sound "block.fire.extinguish" with volume 0.3 at {_explosion_loc}
            # display 10 explosion particles at {_explosion_loc}
            # display 5 large_smoke particles at {_explosion_loc}
            draw 10 of explosion at {_explosion_loc}
            draw 5 of large_smoke at {_explosion_loc}

            
            # 对范围内的实体造成伤害
            loop all entities in radius {@damage_radius} around {_explosion_loc}:
                if loop-entity is living entity:
                    if loop-entity is not {_shooter}: # 不伤害射击者
                        # 计算伤害（根据距离衰减）
                        set {_distance} to distance between {_explosion_loc} and loop-entity
                        set {_dmg} to 5 * (1 - ({_distance} / {@damage_radius})) * {@damage_multiplier}
                        if {_dmg} > 0:
                            damage loop-entity by {_dmg} hearts
                            # 击退效果
                            push loop-entity (direction from {_explosion_loc} to loop-entity) with force 0.5
                            # 着火效果
                            set loop-entity on fire for 2 seconds
                            
# 哎我就想问了，这个东西其实也没有什么必要写来着，，，但是想到可能huxk会喜欢这种贼jb炫酷的东西
#
# # 连发爆炸弓 （触发不是按照概率是按照时间，有100%触发，但是要等待cd）
#
# 特殊攻击（切换手中物品时触发）
on swap hand items:
    if all:
        nbt of event-player's tool has tag "CustomItem"
        string tag "CustomItem" of nbt of event-player's tool is "WerzMeteor"
    then:
        cancel event
        set {_p} to event-player
        
        # 检查冷却
        if {meteor_cooldown::%{_p}'s uuid%} is set:
            if difference between now and {meteor_cooldown::%{_p}'s uuid%} is less than {@meteor_cooldown} seconds:
                set {_remaining} to difference between {@meteor_cooldown} seconds and (difference between now and {meteor_cooldown::%{_p}'s uuid%})
                # 格式化剩余时间，保留一位小数
                set {_formatted} to "%{_remaining}%.1"
                
                play sound "block.redstone_torch.burnout" with volume 0.5 at {_p}
                send action bar "&c射击冷却中! 请等待 %{_formatted}%秒" to {_p}
                stop
                
        # 设置冷却
        set {meteor_cooldown::%{_p}'s uuid%} to now
        
        # 特效和声音
        play sound "entity.generic.explode" with volume 0.7 at {_p}
        play sound "entity.blaze.ambient" with volume 0.5 at {_p}
        # display 10 large_smoke particles at location of {_p}
        draw 10 of large_smoke at {_p}
        
        # 发射多支箭矢
        set {_i} to 0
        while {_i} < {@arrows_per_burst}:
            
            shoot an arrow from {_p} at speed {@arrow_speed}

            shoot an wither skull from {_p} at speed {@arrow_speed}
            add 1 to {_i}
            play sound "entity.experience_orb.pickup" with volume 0.01 at player
            wait 1 tick
        
        set {_j} to 0
        while {_j} < {@arrows_per_burst} / 2:
            
            add 1 to {_j}
            wait 1 tick
                
        send action bar "&a流星爆发已发射!" to {_p}

# 箭矢伤害事件
on damage:
    if damage cause is projectile:
        if all:
            attacker is a player
            nbt of attacker's tool has tag "CustomItem"
            string tag "CustomItem" of nbt of attacker's tool is "WerzMeteor"
        then:
            # 重置无敌时间以允许连续命中
            set victim's invulnerability ticks to 0
            
            # 添加命中特效
            # display 3 flame particles at location of victim
            draw 3 of flame at victim
            
# 当玩家离线时清理冷却数据，防止内存泄漏
on quit:
    clear {meteor_cooldown::%player's uuid%}

on load:
    set {werzmeteor} to bow named "&n&l&aW&be&cr&de&1B&2o&3w&4!" with lore "&7werstick-the most powerful arrow" with nbt from "{CustomItem:WerzMeteor}"
    enchant {werzmeteor} with sharpness 1

on death:
    if all:
        victim is a player
        attacker's tool is {werzmeteor}
    then:
        event.setDeathMessage("%victim% 被 %attacker% 用 &6&lWer的超级大弓箭之美妙Overpowerd神权&r 炒烂了")

command /werzmeteor:
    trigger:
        give or drop {werzmeteor} to player